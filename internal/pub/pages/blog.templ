package pages

import (
	"internal/pub/shared"
	"internal/pub/partials"
	"internal/ds"
	"strings"
	"strconv"
)

templ BlogPage(pages_metadata *ds.PagesMetadata, posts_metadata *ds.PostsMetadata, tags *ds.OrderedList[string], filter_tags ds.Set[string]) {
	@shared.Page("Blog", pages_metadata) {
		// Page specific features
		<div class="prose !max-w-none mx-0">
	 	<h1 class="mb-2">Blog Posts</h1>
		// Content

		@TagsNavigation(tags) // Filter for blog post tags 

		@partials.Search("/blog/search", "#blog-posts")

		@BlogPosts(posts_metadata, filter_tags, "")
		</div>
	}
}

templ TagsNavigation(tags *ds.OrderedList[string]) {
	<div id="tags-navbar" class="flex flex-row items-center mt-6 h-6">
		<p class="font-semibold">
		Tags: 
		</p>

		for _, v := range *tags {
			<div class="mx-2"> <label> { v } </label> 
				<input value="1" 
					type="checkbox" 
					hx-post="/blog/" 
					hx-target="#blog-posts"
					hx-swap="outerHTML"name={ v } 
					hx-include="next input"/> 
				<input type="hidden" name={ v } value="0"/> 
			</div>
		}
	</div>
}

templ BlogPosts(posts_metadata *ds.PostsMetadata, selected_tags ds.Set[string], search string) {
	<dl id="blog-posts">
		for _, post := range *posts_metadata {
			{{ 
			search_match := strings.HasPrefix(strings.ToLower(post.Title), strings.ToLower(search)) 
			tags_match := selected_tags.SubsetOf(post.Tags)
			}}

			if search_match && tags_match {
				<dt class="flex flex-col"> 
				<div><a class="text-3xl" id={ strconv.Itoa(post.PostID) } href={ post.Path }> { post.Title } </a> 
				{{ builder_string := "" }}
				for _, tag := range post.TagsFixed {
					if builder_string == "" {
						{{ builder_string = tag }}
					} else {
						{{ builder_string = builder_string + ", " + tag }}
					}
				}
				<p class="mb-4 mt-1">{ post.Date.Format("01-02-2006") + " | "  + "" + builder_string }</p>
				</div>
				</dt>
			}
		}
		<dt class="flex flex-col"> 
			<div class="font-thin text-3xl"> 
				Posts-in-Progress: <em>More examples about `comptime`</em> and <em>Leveraging SIMD with Zig's @vector()</em> 
			</div>
		</dt>
	</dl>
}
